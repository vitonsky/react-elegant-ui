{
  "url": "/docs/Introduction/GettingStarted",
  "title": "Getting started",
  "text": "\n\nRead introduction to understand terms and structure of package and components.\n\nInstall package and peer deps\n\nEach component have a ready-made bundle with all features, you can use it.It useful for prototyping, library overview, developer purposes, for see on code samples. But should not use it in your real projects, better make your own components bundles.Use library in your application:Then just build it in your favorite bundler and use.You will require bundler modules for handle JS or TSX, CSS and for convert SVG files to components.If you have problems with build process, see webpack config in examples and make issue if it not resolve your problem.\n\nMain feature of this components is architecture which split components to features and allow you use components with only features which you really need.For example, when you make page for smartphones, usually you are not necessary features which implement keyboard navigation different of pages for desktop and you want use native select control instead custom and probably bigger buttons.You can handle useragent header of requests on server side and give bundles depends of it. For smartphons one for desktop browsers other, for old browsers give bundle with polyfils and fallbacks, for modern - with all modern features.This way allow you decrease bundle size, speed up page loading and use experements, when you test features on part of users.If you don't want it, it's fine, just use one bundle everywhere if you want but for you it useful too.This architecture mean also that you can add new features to exists components or replace implementation of some features.You need menu with search input down of menu, and by default exists feature with search input but this input add before menu and it not satisfied you? It's not problem, because you can fix it very simply and fast, just take source code of this feature from repo, change as you wish and build component with your implementation of this feature. It take about 5 minuts.\n\nAll that you need to use component with some features is compose component and features which you need. That builds named a bundles.Example of build in your project file Example of use in your project file \n\nAll features it's just HOCs.Example of simply feature \n\nFeatures may be complexity. You may use many features which trigger by one property and you may wish apply only one feature from this. For example, when you have 3 size modifier, as in example above.For this cases, you can add to your HOC a utility property which describe apply rules.Use for this a helper  from library .Example of feature \n\nMany visual features just import styles and extends  property.For this cases you can use helper  from library .Example of simply visual feature \n\nFor more info about development of features and components see component development docs section.Each component directory contains  files with documentation. See there if you wanna know about specific component.For look at demo of components, you can build examples, see directory ."
}