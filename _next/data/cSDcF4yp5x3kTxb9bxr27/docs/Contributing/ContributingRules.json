{"pageProps":{"title":"Contributing rules","date":1648761279783,"text":"# Contributing rules\n\nIf you find bug or you have good ideas, please make issue on Github.\n\nBefore do it, you should check exists issues, maybe your idea/bug already exist.\n\n## PR rules\n\nYou can make pull request (PR), but if your PR have big changes, in first you should discuss it in issues, because maybe we already fix it or planned work on it.\n\nBefore making PR, check exists PRs, maybe it already resolved.\n\nBefore send your changes you must read `CONTRIBUTING.md` in root directory of repository and accept rules.\n\nCommon rules:\n\n*   Write in detail about your work in PR description with examples if it possible\n\n*   Your PR should change only one thing and shouldn't affect to other exists library components\n\n*   Follow the [component development rules](/docs/Component%20development/Introduction) while write code\n\n*   Comment your code. It help for all to understand and maintain your code\n\n    This is especially important for hacks and unobvious code\n\n*   Use readable names for variables, functions, classes, etc.\n\n*   Follow the commit rules bellow\n\nYour changes also must follow next rules\n\n### Scope of usage\n\nYour contributions in this repo must be for common usage, for many cases.\n\nFor example, PR with change color of button will reject, cuz users can change color in their projects, it not required changes on library level.\n\nWe can't add features for all cases at least because every feature require maintain.\n\nIf we can't accept your changes due to not common scope, please, don't be upset and make library that have this library as peer dependency and implement your feature there. It will good for all and you can collect features for your scope in your own library.\n\nScoped addons can be useful for you and other people, but not make maintain of this library harder. You can tag us in npm and make issue with description of your addon package and we tell about it.\n\n### Breaking changes\n\nBefore write code with breaking changes you must make issue for discuss this.\n\nWe can accept that changes, but only if you can proof that it useful changes which improve library.\n\nIf you want make changes that break many things, it's not problem, but please, write detail migration guide before this for we can estimate cost of this changes and find good time for accept.\n\n### New features\n\nWhen you want to add new features to exists components, you must not change this components.\n\nInstead this just add wrapper or alternative implementation of object which implement interface of original.\n\n### Unify\n\nIf you can't extend exists object and you sure that it can be unify, you can make issue for discuss this changes and if we decide that this changes is required for common usage, then changes will accept and you can implement your feature.\n\nWhen you find problems with unify of interfaces or implementations of components and make issue about it, you very help to unify components.\n\nSome components can't be unify for all cases, but we must seek to it and keep balance between unify and size of implementation. Cuz when user can't use implementation for own features, user will make own implementation and this should be easy for him.\n\n## Commit rules\n\nUse [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/) rules.\n\nThe commit message should be structured as follows:\n\n    <type>[optional scope]: <description>\n\n    [optional body]\n\nCommit types\n\n*   fix\n*   feat\n*   test\n*   refactor\n*   docs\n*   chore\n","navigation":[{"title":"Introduction","child":[{"title":"About","path":"/docs/Introduction/About"},{"title":"Getting started","path":"/docs/Introduction/GettingStarted"},{"title":"Package structure","path":"/docs/Introduction/PackageStructure"},{"title":"Component architecture","path":"/docs/Introduction/ComponentArchitecture"},{"title":"Component file structure","path":"/docs/Introduction/ComponentFileStructure"},{"title":"Theming","path":"/docs/Introduction/Theming"},{"title":"Tokens","path":"/docs/Introduction/Tokens"}]},{"title":"Component development","child":[{"title":"Introduction","path":"/docs/Component development/Introduction"},{"title":"Component naming","path":"/docs/Component development/ComponentNaming"},{"title":"Design system","path":"/docs/Component development/DesignSystem"},{"title":"Notes","path":"/docs/Component development/Notes"}]},{"title":"Contributing","child":[{"title":"Contributing rules","path":"/docs/Contributing/ContributingRules"},{"title":"CLA","path":"/docs/Contributing/CLA"}]}]},"pages":[],"__N_SSG":true}