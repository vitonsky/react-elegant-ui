{"pageProps":{"title":"Design tokens","date":1629142727960,"text":"# Design tokens\n\nAny component can be implement many ways and to abstract from details you must use design tokens.\n\nFor example you make button and you need inner indents. You may use padding, but someone other may want use margin.\n\nYou can use design tokens to define parameters of button indents and allow to different implementations use this values as its want.\n\n## Principles\n\nDesign tokens it's just some abstract dictionary with names and values which define view of components.\n\nThis UI kit use [YAML files](https://en.wikipedia.org/wiki/YAML) to define design tokens in [style-dictionary](https://github.com/amzn/style-dictionary) format. This format allows reference to other tokens and use functions for handle values, for example change brightness of color or convert units.\n\nAll tokens define in files with extension `.tokens.yml`.\n\nEach component contains files with own tokens.\n\nDirectory `tokens` contains a common tokens which use in components.\n\nTokens must use namespaces.\n\n*   For components it their names\n*   For common tokens it their domain of usage\n\n## Usage\n\nTokens may convert to any format such as CSS custom properties, XML, JSON, JS, etc.\n\nFor compile themes from tokens use theme library.\n\n## Example\n\nTypical example of design tokens file\n\n```yml\nbutton:\n  # Define transitions speed\n  transition:\n    press:\n      value: '250ms'\n    hover:\n      value: '{transition.controls.action.hover.size.s.in.value}'\n\n  border:\n    width:\n      value: '{typography.controls.border.width.s.value}'\n    # Make square button\n    radius:\n      value: '0'\n\n  # Define style for action button with view `action`\n  viewAction:\n    fillColor:\n      base:\n        value: '#ffd11a'\n      hovered:\n        value: '#ff6464'\n      disabled:\n        value: '#ffe991'\n\n    typoColor:\n      base:\n        value: '#000'\n```\n","navigation":[{"title":"Introduction","child":[{"title":"About","path":"/docs/Introduction/About"},{"title":"Getting started","path":"/docs/Introduction/GettingStarted"},{"title":"Package structure","path":"/docs/Introduction/PackageStructure"},{"title":"Component architecture","path":"/docs/Introduction/ComponentArchitecture"},{"title":"Component file structure","path":"/docs/Introduction/ComponentFileStructure"},{"title":"Theming","path":"/docs/Introduction/Theming"},{"title":"Tokens","path":"/docs/Introduction/Tokens"}]},{"title":"Component development","child":[{"title":"Introduction","path":"/docs/Component development/Introduction"},{"title":"Component naming","path":"/docs/Component development/ComponentNaming"},{"title":"Design system","path":"/docs/Component development/DesignSystem"},{"title":"Notes","path":"/docs/Component development/Notes"}]},{"title":"Contributing","child":[{"title":"Contributing rules","path":"/docs/Contributing/ContributingRules"},{"title":"CLA","path":"/docs/Contributing/CLA"}]}]},"pages":[],"__N_SSG":true}