{"pageProps":{"title":"Design system style guide","date":1626903325940,"text":"# Design system style guide\n\nThis style guide explain principles and methods of design system a this UI kit.\n\nYou may use this rules to modify this components and write your own components with consistent design system.\n\n## Independence of component tokens\n\nEach component must have own namespace in design system and own tokens in this namespace for each customizable value.\n\nEven if value already exist in common token, component should copy this value to own token and use this token in CSS instead direct use common token in CSS.\n\nThis allows flexible customization of the component. You can change specific tokens for any component instead change one token for all components.\n\nThis way have one disadvantage in some cases - all common tokens never use in CSS and make useless traffic. It may be fix with optional removing common tokens while compile. But this also can be useful when you use CSS aliases and wanna to dynamic change values, cuz in this case you have to change only common token values.\n\n## Cascade changes in tokens\n\nComponent tokens should not use literal values such as color or size, instead it use or modify common values.\n\nThis allows to make global changes by change common tokens.\n\nYou can use literal values for project defined tokens. It useful to personalization of design.\n\n## Token names\n\nNaming must be by meaning but not by value.\n\nFor example color of error message should name `error` instead `red`.\n\n## Name structure\n\nToken name consists of parts and present a path in structure of design system.\n\nFirst part of the struct it's token namespace.\nNext parts - it's just path to token key in namespace.\n\nExample a component namespace:\n\n*   button\n*   icon\n*   menu\n*   textarea\n\nTo simplify navigation a tokens need group by purpose.\n\nTypical groups:\n\n*   typo: typography tokens like size and color of text\n*   fillColor: background colors of block, outline, etc\n*   size: group for few sizes\n\nGroup may present a list of values or other groups like states list:\n\n```yml\nbutton:\n  color:\n    base:\n      value: red\n    hover:\n      value: green\n    focus:\n      value: blue\n\n  border:\n    size:\n      value: 2px\n    style:\n      value: solid\n    color:\n      base:\n        value: red\n      hover:\n        value: green\n```\n","navigation":[{"title":"Introduction","child":[{"title":"About","path":"/docs/Introduction/About"},{"title":"Getting started","path":"/docs/Introduction/GettingStarted"},{"title":"Package structure","path":"/docs/Introduction/PackageStructure"},{"title":"Component architecture","path":"/docs/Introduction/ComponentArchitecture"},{"title":"Component file structure","path":"/docs/Introduction/ComponentFileStructure"},{"title":"Theming","path":"/docs/Introduction/Theming"},{"title":"Tokens","path":"/docs/Introduction/Tokens"}]},{"title":"Component development","child":[{"title":"Introduction","path":"/docs/Component development/Introduction"},{"title":"Component naming","path":"/docs/Component development/ComponentNaming"},{"title":"Design system","path":"/docs/Component development/DesignSystem"},{"title":"Notes","path":"/docs/Component development/Notes"}]},{"title":"Contributing","child":[{"title":"Contributing rules","path":"/docs/Contributing/ContributingRules"},{"title":"CLA","path":"/docs/Contributing/CLA"}]}]},"pages":[],"__N_SSG":true}