"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[735],{7216:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var t=o(5893),s=o(1151);const i={},c="Component file structure",r={id:"Introduction/ComponentFileStructure",title:"Component file structure",description:"Component directories follow by BEM file structure organization and contains all files of component.",source:"@site/../docs/Introduction/ComponentFileStructure.md",sourceDirName:"Introduction",slug:"/Introduction/ComponentFileStructure",permalink:"/react-elegant-ui/Introduction/ComponentFileStructure",draft:!1,unlisted:!1,editUrl:"https://github.com/vitonsky/react-elegant-ui/tree/master/docs/../docs/Introduction/ComponentFileStructure.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Component anatomy",permalink:"/react-elegant-ui/Introduction/ComponentArchitecture"},next:{title:"Getting started",permalink:"/react-elegant-ui/Introduction/GettingStarted"}},l={},d=[{value:"File structure",id:"file-structure",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"component-file-structure",children:"Component file structure"}),"\n",(0,t.jsxs)(n.p,{children:["Component directories follow by ",(0,t.jsx)(n.a,{href:"https://en.bem.info/methodology/filestructure/",children:"BEM file structure organization"})," and contains all files of component."]}),"\n",(0,t.jsx)(n.p,{children:"Below presented typical file structure of components, in fact a block may have not some components or have unlisted here components, for clarification see to docs for specific component."}),"\n",(0,t.jsx)(n.h2,{id:"file-structure",children:"File structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName.tsx"})," - basic component (block)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"__examples__"})," - directory with examples a usage of components"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName@platform.tsx"})," - basic platform-specific version of component that extends a basic component"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_modName"})," - directory of boolean modifier with name ",(0,t.jsx)(n.code,{children:"modName"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName_modName.css"})," - styles of mod"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName_modName.tsx"})," - declaration of mod"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_otherModName"})," - directory of key-value modifier with name ",(0,t.jsx)(n.code,{children:"otherModName"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName_otherModName_value1.css"})," - styles of mod with value ",(0,t.jsx)(n.code,{children:"value1"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName_otherModName_value1.tsx"})," - declaration of mod with value ",(0,t.jsx)(n.code,{children:"value1"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName_otherModName_value2.css"})," - styles of mod with value ",(0,t.jsx)(n.code,{children:"value2"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName_otherModName_value2.tsx"})," - declaration of mod with value ",(0,t.jsx)(n.code,{children:"value2"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ElementName"})," - directory of element with name ",(0,t.jsx)(n.code,{children:"ElementName"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_modName"})," - directory of boolean modifier with name ",(0,t.jsx)(n.code,{children:"modName"})," for element ",(0,t.jsx)(n.code,{children:"ElementName"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ElementName_modName.css"})," - styles of mod"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ElementName_modName.tsx"})," - declaration of mod"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ElementName.css"})," - styles of element"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ElementName.tsx"})," - declaration of element"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName.assets"})," - directory with resources of components, such as images, fonts, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName.bundle"})," - directory with composed components with all features, named by pattern ",(0,t.jsx)(n.code,{children:"platform.tsx"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"platform.ts"})," - contains composed component for a specific platform"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName.docs"})," - directory with additional docs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName.hocs"})," - directory with High Order Components for this block"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName.registry"})," - directory for DI files","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"index.ts"})," - contains only registry interface, without implementation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"platform.ts"})," - contains registry object for a specific platform"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName.tests"})," - directory with tests of component"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ComponentName.tokens"})," - directory with design tokens for component"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Under ",(0,t.jsx)(n.code,{children:"platform.tsx"})," meaning name for specific platform, for example ",(0,t.jsx)(n.code,{children:"desktop.tsx"}),", ",(0,t.jsx)(n.code,{children:"mobile.tsx"})," or ",(0,t.jsx)(n.code,{children:"touch.tsx"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Here displays file structure examples of source, therefore used ",(0,t.jsx)(n.code,{children:".ts"})," and ",(0,t.jsx)(n.code,{children:".tsx"})," files, but package contains compiled ",(0,t.jsx)(n.code,{children:".js"})," files with ",(0,t.jsx)(n.code,{children:".d.ts"})," headers."]})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>r,a:()=>c});var t=o(7294);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);