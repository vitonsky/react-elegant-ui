"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[596],{9255:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var s=t(5893),o=t(1151);const i={},r="Design tokens",a={id:"Introduction/Tokens",title:"Design tokens",description:"Any component can be implement many ways and to abstract from details you must use design tokens.",source:"@site/../docs/Introduction/Tokens.md",sourceDirName:"Introduction",slug:"/Introduction/Tokens",permalink:"/react-elegant-ui/Introduction/Tokens",draft:!1,unlisted:!1,editUrl:"https://github.com/vitonsky/react-elegant-ui/tree/master/docs/../docs/Introduction/Tokens.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Theming",permalink:"/react-elegant-ui/Introduction/Theming"}},c={},l=[{value:"Principles",id:"principles",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"design-tokens",children:"Design tokens"}),"\n",(0,s.jsx)(n.p,{children:"Any component can be implement many ways and to abstract from details you must use design tokens."}),"\n",(0,s.jsx)(n.p,{children:"For example you make button and you need inner indents. You may use padding, but someone other may want use margin."}),"\n",(0,s.jsx)(n.p,{children:"You can use design tokens to define parameters of button indents and allow to different implementations use this values as its want."}),"\n",(0,s.jsx)(n.h2,{id:"principles",children:"Principles"}),"\n",(0,s.jsx)(n.p,{children:"Design tokens it's just some abstract dictionary with names and values which define view of components."}),"\n",(0,s.jsxs)(n.p,{children:["This UI kit use ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/YAML",children:"YAML files"})," to define design tokens in ",(0,s.jsx)(n.a,{href:"https://github.com/amzn/style-dictionary",children:"style-dictionary"})," format. This format allows reference to other tokens and use functions for handle values, for example change brightness of color or convert units."]}),"\n",(0,s.jsxs)(n.p,{children:["All tokens define in files with extension ",(0,s.jsx)(n.code,{children:".tokens.yml"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Each component contains files with own tokens."}),"\n",(0,s.jsxs)(n.p,{children:["Directory ",(0,s.jsx)(n.code,{children:"tokens"})," contains a common tokens which use in components."]}),"\n",(0,s.jsx)(n.p,{children:"Tokens must use namespaces."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"For components it their names"}),"\n",(0,s.jsx)(n.li,{children:"For common tokens it their domain of usage"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"Tokens may convert to any format such as CSS custom properties, XML, JSON, JS, etc."}),"\n",(0,s.jsx)(n.p,{children:"For compile themes from tokens use theme library."}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"Typical example of design tokens file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"button:\n  # Define transitions speed\n  transition:\n    press:\n      value: '250ms'\n    hover:\n      value: '{transition.controls.action.hover.size.s.in.value}'\n\n  border:\n    width:\n      value: '{typography.controls.border.width.s.value}'\n    # Make square button\n    radius:\n      value: '0'\n\n  # Define style for action button with view `action`\n  viewAction:\n    fillColor:\n      base:\n        value: '#ffd11a'\n      hovered:\n        value: '#ff6464'\n      disabled:\n        value: '#ffe991'\n\n    typoColor:\n      base:\n        value: '#000'\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var s=t(7294);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);